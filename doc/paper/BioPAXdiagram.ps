%!PS-Adobe-3.0
%%Title: Microsoft PowerPoint - diagram
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 8/22/2007 17:31:44
%%For: Andrei Zinovyev
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 20 20 575 822
%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(La mémoire disponible est insuffisante pour imprimer ce document.)100 500
(Essayez une ou plusieurs des opérations suivantes, puis recommencez :)100 485
(Choisissez le format d'impression Optimiser pour portabilité.)115 470
(Assurez-vous que la valeur de l'option Mémoire PostScript disponible indiquée sur la page Paramètres du périphérique est exacte.)
115 455(Réduisez le nombre de polices utilisées dans le document.)115 440
(Imprimez-le en plusieurs fois.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *PageSize A4
statusdict begin hugetray end
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Resolution 600dpi
 
%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 20.00126 821.99908 ] def 
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1
%%PageBoundingBox: 20 20 575 822
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

30000 VM?
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
NP 63 342 m 4563 342 l 4563 6342 l 63 6342 l CP 
eoclip
1 1 1 SC
NP 63 342 m 4563 342 l 4563 6342 l 63 6342 l CP 
eofill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 1943 1685 m 1943 1918 l 1927 1918 l 1927 1685 l CP 
1972 1846 m 1935 1941 l 1898 1846 l 1896 1842 1898 1837 1903 1835 c 1907 1834 1912 1836 1913 1840 c 1943 1915 l 1927 1915 l 1956 1840 l 1958 1836 1963 1834 1967 1835 c 1971 1837 1973 1842 1972 1846 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 1063 2084 m 1496 2064 l 1497 2080 l 1063 2100 l CP 
1423 2038 m 1519 2071 l 1426 2112 l 1422 2114 1417 2112 1415 2108 c 1413 2104 1415 2099 1419 2097 c 1493 2064 l 1494 2080 l 1417 2054 l 1413 2053 1411 2048 1412 2044 c 1414 2039 1418 2037 1423 2038 c CP 
fill
GSE
GpPBeg1
0.7333 0.8784 0.8902 SC
NP 1913 1492 m 1747 1492 1613 1559 1613 1642 c 1613 1725 1747 1792 1913 1792 c 2079 1792 2213 1725 2213 1642 c 2213 1559 2079 1492 1913 1492 c CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
6.25 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1913 1492 m 1747 1492 1613 1559 1613 1642 c 1613 1725 1747 1792 1913 1792 c 2079 1792 2213 1725 2213 1642 c 2213 1559 2079 1492 1913 1492 c CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica-Bold
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
7500 VM?
/Helvetica-Bold FontHasEuro not
{
/Euro.Helvetica-Bold
 [556 0 12 -19 563 710 ] 
<97F8C00DDBF7240378F70401F774EA01F803EA01F8EAF70401F8BBF9011571B141BE278B
08FB278B303173FB32085906642C05DB0676078B828C828B82086206632C05E506A8FB3A
EC3EF71B8B08C18BC192B9A908F71407676C54754C8B083B8B6ED483C508F72C06B3EA05
FB5E06BB07F77106B3EA05FB91069AE5B2B9CC8B08C98BB26FA17408A07691828F830809
0E>
AddEuroGlyph
/Euro /Helvetica-Bold /Helvetica-Bold-Copy BuildNewFont
} if
F /F0 0 /256 T /Helvetica-Bold mF 
/F0S75 F0 [117 0 0 -117 0 0 ] mFS
F0S75 Ji 
1699 1685 M (BioPAX)[84 33 71 79 82  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0.7333 0.8784 0.8902 SC
NP 641 2442 m 1441 2442 l 1441 2692 l 641 2692 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
0 setlinejoin
8 setmiterlimit
6.25 setlinewidth
[] 0 setdash
0 0 0 SC
NP 641 2442 m 641 2692 l 1441 2692 l 1441 2442 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol /F0S53 F0 [83 0 0 -83 0 0 ] mFS
F0S53 Ji 
690 2548 M (Reaction Network)[60 46 46 46 28 23 51 51 23 60 46 28 66 51 32  0]xS 
868 2648 M (interface)[23 51 28 46 32 28 46 46  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0.7333 0.8784 0.8902 SC
NP 1563 2442 m 2363 2442 l 2363 2692 l 1563 2692 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
0 setlinejoin
8 setmiterlimit
6.25 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1563 2442 m 1563 2692 l 2363 2692 l 2363 2442 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 1598 2548 M (Pathway Structure)[55 46 28 51 66 46 45 23 55 28 32 51 46 28 51 32  0]xS 
1790 2648 M (interface)[23 51 28 46 32 28 46 46  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0.7333 0.8784 0.8902 SC
NP 2463 2442 m 3263 2442 l 3263 2692 l 2463 2692 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
0 setlinejoin
8 setmiterlimit
6.25 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2463 2442 m 2463 2692 l 3263 2692 l 3263 2442 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 2496 2548 M (Protein Interaction)[55 32 51 28 46 23 51 23 23 51 28 46 32 46 46 28 23 51  0]xS 
2690 2648 M (interface)[23 51 28 46 32 28 46 46  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0.7333 0.8784 0.8902 SC
NP 1463 2813 m 2263 2813 l 2263 3063 l 1463 3063 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
0 setlinejoin
8 setmiterlimit
6.25 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1463 2813 m 1463 3063 l 2263 3063 l 2263 2813 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 1520 2919 M (Interface created )[23 51 28 46 32 28 46 46 46 23 46 32 46 46 28 46 51  0]xS 
1715 3019 M (by user)[51 45 23 51 46 46  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 2213 1643 m 3038 1643 l 3038 1668 l 2213 1668 l CP 
2930 1600 m 3072 1656 l 2930 1711 l 2924 1713 2916 1710 2914 1704 c 2911 1697 2915 1690 2921 1688 c 3033 1644 l 3033 1667 l 2921 1623 l 2915 1621 2911 1614 2914 1607 c 2916 1601 2924 1598 2930 1600 c CP 
fill
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 
%%IncludeResource: font Helvetica
7500 VM?
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F1 0 /256 T /Helvetica mF 
/F1S64 F1 [100 0 0 -100 0 0 ] mFS
F1S64 Ji 
2222 1591 M (Save whole hierarchy)[67 56 49 56 28 71 55 56 22 56 27 56 21 56 33 56 33 49 56  0]xS 
3174 1591 M <85>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 655 2442 m 655 1642 l 655 1637 658 1634 663 1634 c 1596 1634 l 1596 1650 l 663 1650 l 671 1642 l 671 2442 l CP 
1551 1606 m 1613 1642 l 1551 1678 l 1547 1681 1541 1679 1539 1675 c 1537 1671 1538 1666 1542 1664 c 1592 1635 l 1592 1649 l 1542 1620 l 1538 1618 1537 1613 1539 1609 c 1541 1605 1547 1603 1551 1606 c CP 
fill
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol /F1S00IFFFFFF9C F1 [0 -100 -100 0 0 0 ] mFS
F1S00IFFFFFF9C Ji 
642 2350 M (association)[-56 -50 -49 -56 -50 -21 -56 -28 -22 -55  0]yS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 1921 3063 m 1921 3225 l 1905 3225 l 1905 3063 l CP 
1950 3153 m 1913 3248 l 1876 3153 l 1874 3149 1876 3144 1881 3143 c 1885 3141 1890 3143 1892 3147 c 1921 3222 l 1905 3222 l 1934 3147 l 1936 3143 1941 3141 1945 3143 c 1949 3144 1952 3149 1950 3153 c CP 
fill
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F1S64 Ji 
1973 3170 M (Export )[67 49 56 56 33 28  0]xS 
2290 3170 M (subnetwork)[50 55 55 55 56 28 71 56 33  0]xS 
2799 3170 M <85>S 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0.7333 0.8784 0.8902 SC
NP 896 1949 m 734 2074 l 896 2199 l 1221 2199 l 1384 2074 l 1221 1949 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
6.25 setlinewidth
[] 0 setdash
0 0 0 SC
NP 896 1949 m 734 2074 l 896 2199 l 1221 2199 l 1384 2074 l 1221 1949 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F0S75 Ji 
891 2118 M (Query)[91 71 65 47  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0.7333 0.8784 0.8902 SC
NP 2625 1942 m 2463 2067 l 2625 2192 l 2950 2192 l 3113 2067 l 2950 1942 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
6.25 setlinewidth
[] 0 setdash
0 0 0 SC
NP 2625 1942 m 2463 2067 l 2625 2192 l 2950 2192 l 3113 2067 l 2950 1942 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 2620 2111 M (Editor)[78 71 33 39 70  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0.7333 0.8784 0.8902 SC
NP 1548 1927 m 1471 2227 l 2345 2227 l 2421 1927 l CP 
eofill
GSE
GpPBeg1
1 setlinecap
1 setlinejoin
10 setmiterlimit
6.25 setlinewidth
[] 0 setdash
0 0 0 SC
NP 1548 1927 m 1471 2227 l 2345 2227 l 2421 1927 l CP 
stroke
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol 1621 2050 M (Mapping to )[98 64 71 70 33 71 70 33 39 70  0]xS 
1579 2190 M (index \(graph\))[33 71 71 64 64 33 39 71 45 65 71 70  0]xS 
30000 VM?
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 2602 1933 m 2223 1708 l 2232 1693 l 2610 1919 l CP 
2563 1858 m 2626 1938 l 2525 1921 l 2521 1920 2518 1916 2518 1911 c 2519 1907 2523 1904 2528 1905 c 2607 1918 l 2599 1931 l 2550 1868 l 2547 1864 2548 1859 2551 1856 c 2555 1853 2560 1854 2563 1858 c CP 
2270 1769 m 2208 1689 l 2308 1706 l 2313 1706 2316 1711 2315 1715 c 2314 1720 2310 1723 2305 1722 c 2226 1709 l 2234 1695 l 2283 1759 l 2286 1762 2286 1768 2282 1771 c 2278 1773 2273 1773 2270 1769 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 1467 2249 m 1089 2435 l 1082 2420 l 1459 2234 l CP 
1166 2429 m 1065 2437 l 1134 2362 l 1137 2359 1142 2359 1145 2362 c 1149 2365 1149 2370 1146 2374 c 1091 2433 l 1085 2419 l 1165 2412 l 1169 2412 1173 2415 1174 2420 c 1174 2424 1171 2428 1166 2429 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 1964 2242 m 1971 2425 l 1954 2426 l 1947 2242 l CP 
1997 2352 m 1963 2448 l 1923 2355 l 1921 2351 1923 2346 1927 2344 c 1931 2342 1936 2344 1938 2348 c 1970 2422 l 1954 2423 l 1981 2347 l 1982 2342 1987 2340 1992 2341 c 1996 2343 1998 2348 1997 2352 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 2352 2227 m 2900 2428 l 2894 2444 l 2347 2242 l CP 
2843 2377 m 2919 2444 l 2817 2446 l 2812 2446 2809 2442 2809 2438 c 2808 2433 2812 2429 2817 2429 c 2897 2428 l 2892 2442 l 2831 2389 l 2828 2386 2828 2381 2831 2377 c 2834 2374 2839 2374 2843 2377 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 1221 2207 m 1221 2223 l 1205 2223 l 1205 2207 l CP 
1221 2240 m 1221 2257 l 1205 2257 l 1205 2240 l CP 
1221 2273 m 1221 2290 l 1205 2290 l 1205 2273 l CP 
1213 2298 m 1230 2298 l 1230 2315 l 1213 2315 l CP 
1246 2298 m 1263 2298 l 1263 2315 l 1246 2315 l CP 
1280 2298 m 1296 2298 l 1296 2315 l 1280 2315 l CP 
1313 2298 m 1330 2298 l 1330 2315 l 1313 2315 l CP 
1346 2298 m 1363 2298 l 1363 2315 l 1346 2315 l CP 
1380 2298 m 1396 2298 l 1396 2315 l 1380 2315 l CP 
1413 2298 m 1430 2298 l 1430 2315 l 1413 2315 l CP 
1446 2298 m 1463 2298 l 1463 2315 l 1446 2315 l CP 
1480 2298 m 1496 2298 l 1496 2315 l 1480 2315 l CP 
1521 2307 m 1521 2323 l 1505 2323 l 1505 2307 l CP 
1521 2340 m 1521 2357 l 1505 2357 l 1505 2340 l CP 
1521 2373 m 1521 2390 l 1505 2390 l 1505 2373 l CP 
1521 2407 m 1521 2423 l 1505 2423 l 1505 2407 l CP 
1521 2440 m 1521 2457 l 1505 2457 l 1505 2440 l CP 
1521 2473 m 1521 2490 l 1505 2490 l 1505 2473 l CP 
1521 2507 m 1521 2523 l 1505 2523 l 1505 2507 l CP 
1521 2540 m 1521 2557 l 1505 2557 l 1505 2540 l CP 
1521 2573 m 1521 2590 l 1505 2590 l 1505 2573 l CP 
1521 2607 m 1521 2623 l 1505 2623 l 1505 2607 l CP 
1521 2640 m 1521 2657 l 1505 2657 l 1505 2640 l CP 
1521 2673 m 1521 2690 l 1505 2690 l 1505 2673 l CP 
1521 2707 m 1521 2723 l 1505 2723 l 1505 2707 l CP 
1521 2740 m 1521 2757 l 1505 2757 l 1505 2740 l CP 
1521 2773 m 1521 2790 l 1505 2790 l 1505 2773 l CP 
1550 2718 m 1513 2813 l 1476 2718 l 1474 2714 1476 2709 1481 2707 c 1485 2705 1490 2708 1492 2712 c 1521 2787 l 1505 2787 l 1534 2712 l 1536 2708 1541 2705 1545 2707 c 1549 2709 1552 2714 1550 2718 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 1071 2692 m 1071 2709 l 1055 2709 l 1055 2692 l CP 
1071 2725 m 1071 2742 l 1055 2742 l 1055 2725 l CP 
1071 2759 m 1071 2775 l 1055 2775 l 1055 2759 l CP 
1071 2792 m 1071 2809 l 1055 2809 l 1055 2792 l CP 
1071 2825 m 1071 2842 l 1055 2842 l 1055 2825 l CP 
1071 2859 m 1071 2875 l 1055 2875 l 1055 2859 l CP 
1071 2892 m 1071 2909 l 1055 2909 l 1055 2892 l CP 
1071 2925 m 1071 2942 l 1055 2942 l 1055 2925 l CP 
1071 2959 m 1071 2975 l 1055 2975 l 1055 2959 l CP 
1063 2984 m 1080 2984 l 1080 3000 l 1063 3000 l CP 
1096 2984 m 1113 2984 l 1113 3000 l 1096 3000 l CP 
1130 2984 m 1146 2984 l 1146 3000 l 1130 3000 l CP 
1163 2984 m 1180 2984 l 1180 3000 l 1163 3000 l CP 
1196 2984 m 1213 2984 l 1213 3000 l 1196 3000 l CP 
1230 2984 m 1246 2984 l 1246 3000 l 1230 3000 l CP 
1263 2984 m 1280 2984 l 1280 3000 l 1263 3000 l CP 
1296 2984 m 1313 2984 l 1313 3000 l 1296 3000 l CP 
1330 2984 m 1346 2984 l 1346 3000 l 1330 3000 l CP 
1363 2984 m 1380 2984 l 1380 3000 l 1363 3000 l CP 
1396 2984 m 1413 2984 l 1413 3000 l 1396 3000 l CP 
1430 2984 m 1446 2984 l 1446 3000 l 1430 3000 l CP 
1374 2955 m 1469 2992 l 1374 3029 l 1370 3031 1365 3028 1364 3024 c 1362 3020 1364 3015 1368 3013 c 1443 2984 l 1443 3000 l 1368 2971 l 1364 2969 1362 2964 1364 2960 c 1365 2955 1370 2953 1374 2955 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 2871 2692 m 2871 2709 l 2855 2709 l 2855 2692 l CP 
2871 2725 m 2871 2742 l 2855 2742 l 2855 2725 l CP 
2871 2759 m 2871 2775 l 2855 2775 l 2855 2759 l CP 
2871 2792 m 2871 2809 l 2855 2809 l 2855 2792 l CP 
2871 2825 m 2871 2842 l 2855 2842 l 2855 2825 l CP 
2871 2859 m 2871 2875 l 2855 2875 l 2855 2859 l CP 
2871 2892 m 2871 2909 l 2855 2909 l 2855 2892 l CP 
2871 2925 m 2871 2942 l 2855 2942 l 2855 2925 l CP 
2871 2959 m 2871 2975 l 2855 2975 l 2855 2959 l CP 
2863 3000 m 2846 3000 l 2846 2984 l 2863 2984 l CP 
2830 3000 m 2813 3000 l 2813 2984 l 2830 2984 l CP 
2796 3000 m 2780 3000 l 2780 2984 l 2796 2984 l CP 
2763 3000 m 2746 3000 l 2746 2984 l 2763 2984 l CP 
2730 3000 m 2713 3000 l 2713 2984 l 2730 2984 l CP 
2696 3000 m 2680 3000 l 2680 2984 l 2696 2984 l CP 
2663 3000 m 2646 3000 l 2646 2984 l 2663 2984 l CP 
2630 3000 m 2613 3000 l 2613 2984 l 2630 2984 l CP 
2596 3000 m 2580 3000 l 2580 2984 l 2596 2984 l CP 
2563 3000 m 2546 3000 l 2546 2984 l 2563 2984 l CP 
2530 3000 m 2513 3000 l 2513 2984 l 2530 2984 l CP 
2496 3000 m 2480 3000 l 2480 2984 l 2496 2984 l CP 
2463 3000 m 2446 3000 l 2446 2984 l 2463 2984 l CP 
2430 3000 m 2413 3000 l 2413 2984 l 2430 2984 l CP 
2396 3000 m 2380 3000 l 2380 2984 l 2396 2984 l CP 
2363 3000 m 2346 3000 l 2346 2984 l 2363 2984 l CP 
2330 3000 m 2313 3000 l 2313 2984 l 2330 2984 l CP 
2296 3000 m 2280 3000 l 2280 2984 l 2296 2984 l CP 
2352 3029 m 2257 2992 l 2352 2955 l 2356 2953 2361 2955 2362 2960 c 2364 2964 2362 2969 2358 2971 c 2283 3000 l 2283 2984 l 2358 3013 l 2362 3015 2364 3020 2362 3024 c 2361 3028 2356 3031 2352 3029 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 1921 2699 m 1921 2716 l 1905 2716 l 1905 2699 l CP 
1921 2733 m 1921 2749 l 1905 2749 l 1905 2733 l CP 
1921 2766 m 1921 2783 l 1905 2783 l 1905 2766 l CP 
1950 2711 m 1913 2806 l 1876 2711 l 1874 2706 1876 2701 1881 2700 c 1885 2698 1890 2700 1892 2705 c 1921 2780 l 1905 2780 l 1934 2705 l 1936 2700 1941 2698 1945 2700 c 1949 2701 1952 2706 1950 2711 c CP 
fill
GSE
/languagelevel where {pop languagelevel} {1} ifelse
2 ge dup {currentglobal exch true setglobal globaldict} {userdict} ifelse
/GpPBeg1 {
    gsave initclip
    16 dict begin
    /c {curveto} def /l {lineto} def /m {moveto} def
    /rc {rcurveto} def /rl {rlineto} def
    /NP {newpath} def /CP {closepath} def /SC {setrgbcolor} def
    /GSE {end grestore} def
} put
{setglobal} if
GpPBeg1
0 0 0 SC
NP 771 2692 m 771 3225 l 755 3225 l 755 2692 l CP 
800 3153 m 763 3248 l 726 3153 l 724 3149 726 3144 731 3143 c 735 3141 740 3143 742 3147 c 771 3222 l 755 3222 l 784 3147 l 786 3143 791 3141 795 3143 c 799 3144 802 3149 800 3153 c CP 
fill
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceRGB dup setcolorspace /colspABC exch def
0 0 0 1 scol F1S64 Ji 
823 3220 M (Export to SBML)[67 49 56 56 33 28 28 28 56 28 66 67 83  0]xS 
1524 3220 M <85>S 
LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Trailer
%%BoundingBox: 20 20 575 822
%%DocumentNeededResources: 
%%+ font Helvetica-Bold
%%+ font Helvetica
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF
